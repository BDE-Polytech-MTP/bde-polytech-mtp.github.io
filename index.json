[{"uri":"/architecture/front-end/resources/","title":"Les ressources","tags":[],"description":"","content":"Les ressources Nous aurons besoin de déployer 4 ressources AWS pour délivrer la partie cliente :\n S3 Bucket : stock les fichiers S3 Bucket Policy : définit les droits d'accès au contenu du S3 bucket CloudFront Distribution : sert du contenu à travers le monde CloudFront Origin Access Identity : permet d'identifier la ressource CloudFront Distribution lors de l'accès au S3 Bucket  "},{"uri":"/architecture/","title":"Architecture","tags":[],"description":"","content":"Chapitre 1 Architecture Introduction à l'architecture serveur AWS\n"},{"uri":"/architecture/front-end/install/","title":"Installation","tags":[],"description":"","content":"Installation de l'architecture Pour installer l'architecture il suffit de passer par CloudFormation qui va nous permettre de déployer notre stack directement depuis un fichier de configuration. Pour cela il suffit de se connecter sur la console AWS, d'aller sur CloudFormation et de créer une pile depuis le modèle ci-dessous. Il n'y a rien d'autre à configurer.\nPensez à bien sélectionner la région Paris (eu-west-3) avant de créer la pile\n Cette configuration a été créée dans le but de servir une SPA, c'est pourquoi en cas d'erreur 404 nous renvoyons le fichier index.html\n AWSTemplateFormatVersion: \u0026#39;2010-09-09\u0026#39; Description: \u0026#39;S3 content distribution through CloudFront\u0026#39; Resources: S3Bucket: Type: \u0026#39;AWS::S3::Bucket\u0026#39; DeletionPolicy: \u0026#39;Delete\u0026#39; Metadata: Comment: \u0026#39;Bucket used to store frontend files\u0026#39; Properties: AccessControl: \u0026#39;Private\u0026#39; BucketName: !Sub \u0026#39;${AWS::StackName}-s3-bucket\u0026#39; S3BucketPolicy: Type: \u0026#39;AWS::S3::BucketPolicy\u0026#39; Metadata: Comment: \u0026#39;Bucket policy to allow cloudfront to access the data\u0026#39; Properties: Bucket: !Ref S3Bucket PolicyDocument: Statement: - Action: - \u0026#39;s3:GetObject\u0026#39; Effect: \u0026#39;Allow\u0026#39; Principal: CanonicalUser: !GetAtt CfOriginAccessIdentity.S3CanonicalUserId Resource: - !Sub \u0026#39;arn:aws:s3:::${S3Bucket}/*\u0026#39; CfDistribution: Type: \u0026#39;AWS::CloudFront::Distribution\u0026#39; Metadata: Comment: \u0026#39;A CloudFront distribution with an S3 origin\u0026#39; Properties: DistributionConfig: Comment: \u0026#39;A distribution with an S3 origin\u0026#39; DefaultCacheBehavior: AllowedMethods: - \u0026#39;HEAD\u0026#39; - \u0026#39;GET\u0026#39; CachedMethods: - \u0026#39;HEAD\u0026#39; - \u0026#39;GET\u0026#39; Compress: true DefaultTTL: 86400 ForwardedValues: Cookies: Forward: \u0026#39;none\u0026#39; Headers: - \u0026#39;Origin\u0026#39; QueryString: false MaxTTL: 31536000 MinTTL: 86400 TargetOriginId: !Sub \u0026#39;s3-origin-${S3Bucket}\u0026#39; ViewerProtocolPolicy: \u0026#39;redirect-to-https\u0026#39; DefaultRootObject: \u0026#39;index.html\u0026#39; Enabled: true HttpVersion: \u0026#39;http2\u0026#39; IPV6Enabled: true Origins: - DomainName: !GetAtt S3Bucket.RegionalDomainName Id: !Sub \u0026#39;s3-origin-${S3Bucket}\u0026#39; OriginPath: \u0026#39;\u0026#39; S3OriginConfig: OriginAccessIdentity: !Sub \u0026#39;origin-access-identity/cloudfront/${CfOriginAccessIdentity}\u0026#39; PriceClass: \u0026#39;PriceClass_100\u0026#39; CustomErrorResponses: - ErrorCachingMinTTL: 300 ErrorCode: 404 ResponsePagePath: \u0026#39;/index.html\u0026#39; ResponseCode: 200 CfOriginAccessIdentity: Type: \u0026#39;AWS::CloudFront::CloudFrontOriginAccessIdentity\u0026#39; Metadata: Comment: \u0026#39;Access S3 bucket content only through CloudFront\u0026#39; Properties: CloudFrontOriginAccessIdentityConfig: Comment: \u0026#39;Access S3 bucket content only through CloudFront\u0026#39; Outputs: Region: Description: \u0026#39;Stack deployement region\u0026#39; Value: !Ref \u0026#39;AWS::Region\u0026#39; S3BucketName: Description: \u0026#39;Bucket name\u0026#39; Value: !Ref S3Bucket CfDistributionId: Description: \u0026#39;CloudFront Distribution ID\u0026#39; Value: !Ref CfDistribution CfDistributionDomainName: Description: \u0026#39;CloudFront Distribution Domain Name\u0026#39; Value: !GetAtt CfDistribution.DomainName Une fois que la pile est créée (état CREATE_COMPLETE) vous pouvez trouver dans l'onglet Sorties le nom de domaine correspondant à votre distribution CloudFront. Celle-ci est la valeur associée à la clé CfDistributionDomainName. De même, vous pouvez trouver le nom du S3 Bucket créé. C'est la valeur associée à la clé S3BucketName.\nSi vous essayez de vous rendre sur votre domaine CloudFront à ce niveau là du déploiement, vous devriez voir affiché une erreur. Cela est tout à faire normal puisque votre S3 Bucket est vide.\n "},{"uri":"/architecture/front-end/deploy/","title":"Déploiement","tags":[],"description":"","content":"Déploiement de l'application Dans notre cas nous utiliserons le framework Angular pour construire notre application cliente. Pour déployer cette l'application sur notre architecture précédemment créée, il nous suffit de build notre application ng build --prod et nous devrions alors avoir notre application dans le dossier dist/\u0026lt;app-name\u0026gt;. Ensuite il faut copier l'application dans le S3 Bucket avec la commande aws s3 cp ./dist/\u0026lt;app-name\u0026gt; s3://\u0026lt;s3-bucket-name\u0026gt; --recursive.\n\u0026lt;app-name\u0026gt; correspond au nom de votre application Angular et \u0026lt;s3-bucket-name\u0026gt; est le nom du S3 Bucket vers lequel vous voulez envoyer les fichiers. Donc notre cas c'est le nom que vous avez récupéré lors de la création de la stack avec CloudFormation\n Il faut bien sûr avoir installé les CLI d'Angular et d'AWS ainsi qu'avoir configuré le CLI d'AWS avec aws configure. Il vous faut aussi avoir les droits d'accès au S3 Bucket (les permissions se gèrent avec AWS IAM)\n Une fois cela fait, l'application devrait être disponible en vous rendant sur le domaine CloudFront que vous pouvez retrouvez dans les sorties de la pile précédemment créée via CloudFormation.\n"},{"uri":"/architecture/front-end/","title":"Front End","tags":[],"description":"","content":"Introduction La partie cliente de l'application sera fournie via AWS CloudFront qui prendra source dans un AWS S3 Bucket.\nAWS S3 Bucket est un service de stockage. Celui est facturé à la quantité de données stockée ainsi qu'au nombre de transactions effectuées (lectures, écritures). Pour plus d'informations, consultez la page du produit.\nAWS CloudFront est un service de distribution de contenu. Celui-ci est facturé à la quantité de données (au Go) transféré. Pour plus d'informations, consultez la page du produit.\nPour mettre en place cette architecture nous utiliserons AWS CloudFormation qui permet de définir une architecture et de la déployer depuis un simple fichier de configuration. Pour plus d'informations, consultez la page du produit.\n"},{"uri":"/","title":"Accueil","tags":[],"description":"","content":"Accueil "},{"uri":"/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/tags/","title":"Tags","tags":[],"description":"","content":""}]