<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Accueil on Polytech MTP BDE</title><link>/</link><description>Recent content in Accueil on Polytech MTP BDE</description><generator>Hugo -- gohugo.io</generator><language>fr-fr</language><lastBuildDate>Mon, 06 Apr 2020 19:34:04 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/database/introduction/</link><pubDate>Thu, 09 Apr 2020 19:07:54 +0200</pubDate><guid>/database/introduction/</guid><description>RDBMS VS. NoSQL Comme pour beaucoup de systèmes d'information, nous avons besoin de stocker des données. Pour stocker ces données nous allons bien sûr utiliser une base de données et le choix d'une base de données relationnelle ou NoSQL s'offre donc à nous.
Comparons alors rapidement les deux solutions :
RDBMS NoSQL Tables avec schéma Respect du principe ACID Coûteux en CPU Coûteux en espace disque Scale bien Est peu onéreux Est simple à concevoir Après avoir vu le tableau ci-dessus on voudrait certainement se diriger vers une RDBMS plutôt que sur une BDD NoSQL.</description></item><item><title>Les ressources</title><link>/architecture/front-end/resources/</link><pubDate>Tue, 07 Apr 2020 00:32:01 +0200</pubDate><guid>/architecture/front-end/resources/</guid><description>Les ressources Nous aurons besoin de déployer 4 ressources AWS pour délivrer la partie cliente :
S3 Bucket : stock les fichiers S3 Bucket Policy : définit les droits d'accès au contenu du S3 bucket CloudFront Distribution : sert du contenu à travers le monde CloudFront Origin Access Identity : permet d'identifier la ressource CloudFront Distribution lors de l'accès au S3 Bucket</description></item><item><title>Installation</title><link>/architecture/front-end/install/</link><pubDate>Tue, 07 Apr 2020 00:32:01 +0200</pubDate><guid>/architecture/front-end/install/</guid><description>Installation de l'architecture Pour installer l'architecture il suffit de passer par CloudFormation qui va nous permettre de déployer notre stack directement depuis un fichier de configuration. Pour cela il suffit de se connecter sur la console AWS, d'aller sur CloudFormation et de créer une pile depuis le modèle ci-dessous. Il n'y a rien d'autre à configurer.
Pensez à bien sélectionner la région Paris (eu-west-3) avant de créer la pile
Cette configuration a été créée dans le but de servir une SPA, c'est pourquoi en cas d'erreur 404 nous renvoyons le fichier index.</description></item><item><title>Patterns d'accès</title><link>/database/access-patterns/</link><pubDate>Wed, 08 Apr 2020 16:56:34 +0200</pubDate><guid>/database/access-patterns/</guid><description>Patterns d'accès au données Description 1 Récupérer un utilisateur par son email 2 Récupérer un utilisateur par son ID 3 Récupérer un événement par son ID 4 Récupérer tous les événements auxquels participe un utilisateur 5 Récupérer tous les événements pour un BDE donné 6 Récupérer tous les utilisateurs qui participent à un événement 7 Récupérer tous les utilisateurs pour un BDE donné Contexte d'utilisation des patterns d'accès Récupérer un utilisateur par son email Lors de la connexion, l'utilisateur s'indentifiera grâce à son adresse email et son mot de passe.</description></item><item><title>Déploiement</title><link>/architecture/front-end/deploy/</link><pubDate>Wed, 08 Apr 2020 09:28:56 +0200</pubDate><guid>/architecture/front-end/deploy/</guid><description>Déploiement de l'application Dans notre cas nous utiliserons le framework Angular pour construire notre application cliente. Pour déployer cette l'application sur notre architecture précédemment créée, il nous suffit de build notre application ng build --prod et nous devrions alors avoir notre application dans le dossier dist/&amp;lt;app-name&amp;gt;. Ensuite il faut copier l'application dans le S3 Bucket avec la commande aws s3 cp ./dist/&amp;lt;app-name&amp;gt; s3://&amp;lt;s3-bucket-name&amp;gt; --recursive.
&amp;lt;app-name&amp;gt; correspond au nom de votre application Angular et &amp;lt;s3-bucket-name&amp;gt; est le nom du S3 Bucket vers lequel vous voulez envoyer les fichiers.</description></item></channel></rss>